<?xml version="1.0"?>
<robot name="rbrobout" xmlns:xacro="http://wiki.ros.org/xacro">

    <xacro:arg name="name" default="rbrobout" />

    <!-- ***************** -->
    <!-- Imported elements -->
    <!-- ***************** -->

    <!-- First we import all posible elements defined in the urdf.xacro files. All these elements
    are defined as macro:xacros -->
    <xacro:include filename="$(find ur_description)/urdf/ur_macro.xacro" />
    <xacro:include filename="ewellix_lift_900mm.urdf.xacro" />

    <xacro:property name="PI" value="3.1415926535897931" />

    <xacro:property name="lift_position_x" value="0.72328" />
    <xacro:property name="lift_position_y" value="0" />
    <xacro:property name="lift_position_z" value="0.38" />
    <xacro:property name="lift_orientation_r" value="0" />
    <xacro:property name="lift_orientation_p" value="0" />
    <xacro:property name="lift_orientation_y" value="0" />


    <!-- Flag to select the high or low quality model -->
    <xacro:property name="hq" value="true" />

    <!-- <xacro:arg name="prefix" default="rbrobout_"/> -->
    <xacro:arg name="prefix" default="" />
    <xacro:arg name="ur_prefix" default="ur_" />
    <xacro:arg name="ros_planar_move_plugin" default="true" />
    <xacro:arg name="sim" default="true" />
    <xacro:arg name="ur_type" default="ur10e" />

    <!-- <xacro:arg name="joint_limit_params" default="$(find ur_description)/config/$(arg
    ur_type)/joint_limits.yaml"/> -->
    <xacro:arg name="kinematics_params"
        default="$(find ur_description)/config/$(arg ur_type)/default_kinematics.yaml" />
    <xacro:arg name="physical_params"
        default="$(find ur_description)/config/$(arg ur_type)/physical_parameters.yaml" />
    <xacro:arg name="visual_params"
        default="$(find ur_description)/config/$(arg ur_type)/visual_parameters.yaml" />

    <xacro:arg name="joint_limit_params" default="$(find dtc_test)/config/joint_limits.yaml" />

    <!--
    <xacro:arg name="simulation_controllers"
               default="$(find
    bmt_common_bringup)/agv_descriptions/rbrobout/config/universal_robot/ur_ros2_control_configuration.yaml"/>
               -->
    <!-- initial position for simulations (Fake Hardware, Gazebo, Ignition) -->
    <xacro:arg name="initial_positions_file" default="$(find dtc_test)/config/initial_positions.yaml" />
    <!-- convert to property to use substitution in function -->
    <xacro:property name="initial_positions_file" default="$(arg initial_positions_file)" />

    <xacro:arg name="transmission_hw_interface" default="" />
    <xacro:arg name="safety_limits" default="true" />
    <xacro:arg name="safety_pos_margin" default="0.15" />
    <xacro:arg name="safety_k_position" default="20" />

    <xacro:arg name="use_fake_hardware" default="true" />
    <xacro:arg name="fake_sensor_commands" default="false" />
    <xacro:arg name="sim_gazebo" default="true" />
    <xacro:arg name="sim_ignition" default="false" />

    <xacro:arg name="headless_mode" default="false" />
    <xacro:arg name="robot_ip" default="192.168.56.101" />

    <xacro:arg name="use_tool_communication" default="false" />
    <xacro:arg name="tool_voltage" default="24" />
    <xacro:arg name="tool_parity" default="0" />
    <xacro:arg name="tool_baud_rate" default="115200" />
    <xacro:arg name="tool_stop_bits" default="1" />
    <xacro:arg name="tool_rx_idle_chars" default="1.5" />
    <xacro:arg name="tool_tx_idle_chars" default="3.5" />
    <xacro:arg name="tool_device_name" default="/tmp/ttyUR" />
    <xacro:arg name="tool_tcp_port" default="54321" />

    <xacro:property name="tool_change_tf_y" value="0.3490000" />
    <xacro:property name="tool_change_tf_z" value="0.8930001" />
    <xacro:property name="tool_change_tf_x" value="0.6734854" />
    <xacro:property name="tool_change_tf_x_2" value="0.494798" />

    <!-- Imported from bmt_1-->
    <!-- ros2_control related parameters -->
    <xacro:arg name="script_filename" default="$(find ur_robot_driver)/resources/ros_control.urscript" />
    <xacro:arg name="output_recipe_filename" default="$(find ur_robot_driver)/resources/rtde_output_recipe.txt" />
    <xacro:arg name="input_recipe_filename" default="$(find ur_robot_driver)/resources/rtde_input_recipe.txt" />

    <xacro:macro name="rbrobout" params="prefix publish_bf hq">

        <!-- *************** -->
        <!-- Robots Elements -->
        <!-- *************** -->

        <!-- Here we create the robot elements using the xacro:macros imported at the beggining of
        this file -->

        <!-- RBROBOUT base -->
        <!-- xacro:rbrobout_base prefix="$(arg prefix)" publish_bf="true" hq="${hq}" /-->

        <!-- BASE_LINK -->
        <link name="${prefix}base_link">
            <!--inertial>
                <mass value="200.0" />
                <origin xyz="0 0 0" />
                <inertia  ixx="1.391" ixy="0.004"  ixz="0.0"  iyy="6.853"  iyz="0.0"  izz="6.125" />
            </inertial-->
            <visual>
                <origin xyz="0 0 0.425" rpy="0 0 0" />
                <geometry>
                    <box size="1.7 0.850 1.000" />
                    <!--mesh filename="package://rbrobout_description/meshes/bases/robout_chassis.stl"/-->
                </geometry>
                <material name="darkgrey">
                    <color rgba="0.1 0.1 0.1 1"/>
                </material>
            </visual>
            <collision>
                <origin xyz="0 0 0.425" rpy="0 0 0 " />
                <geometry>
                    <box size="1.7 0.850 1.000" />
                </geometry>
            </collision>
        </link>

        <joint name="${prefix}top_cover_base_joint" type="fixed">
            <parent link="${prefix}base_link"/>
            <child link="${prefix}top_cover_base_link" />
        </joint>

        <!-- BASE_LINK -->
        <link name="${prefix}top_cover_base_link">
            <inertial>
                <mass value="200.0" />
                <origin xyz="0 0 0" />
                <!-- TODO -->
                <inertia  ixx="1.391" ixy="0.004"  ixz="0.0"  iyy="6.853"  iyz="0.0"  izz="6.125" />
            </inertial>
            <visual>
                <origin xyz="-0.18 0 1.0" rpy="0 0 0" />
                <geometry>
                    <box size="0.8 0.850 0.135"/>
                    <!--mesh filename="package://rbrobout_boeing_description/meshes/others/top_cover.stl"/-->
                </geometry>
                <material name="darkgrey">
                    <color rgba="0.1 0.1 0.1 1"/>
                </material>
            </visual>
            <collision>
                <origin xyz="-0.18 0 1.0" rpy="0 0 0" />
                <geometry>
                    <box size="0.8 0.850 0.135"/>
                    <!--mesh filename="package://rbrobout_boeing_description/meshes/others/top_cover.stl"/-->
                </geometry>
            </collision>
        </link>


        <!-- Vertical stage -->
        <xacro:ewellix_lift_900mm prefix="$(arg prefix)" parent="$(arg prefix)base_link"
            sim="$(arg sim)">
            <origin xyz="${lift_position_x} 0 ${lift_position_z}" rpy="0 0 0" />
        </xacro:ewellix_lift_900mm>

        <!-- arm -->
        <xacro:ur_robot
            name="$(arg name)"
            tf_prefix="ur_"
            parent="$(arg prefix)ewellix_lift_top_link"
            joint_limits_parameters_file="$(arg joint_limit_params)"
            kinematics_parameters_file="$(arg kinematics_params)"
            physical_parameters_file="$(arg physical_params)"
            visual_parameters_file="$(arg visual_params)"
            transmission_hw_interface="$(arg transmission_hw_interface)"
            safety_limits="$(arg safety_limits)"
            safety_pos_margin="$(arg safety_pos_margin)"
            safety_k_position="$(arg safety_k_position)"
            use_fake_hardware="$(arg use_fake_hardware)"
            fake_sensor_commands="$(arg fake_sensor_commands)"
            sim_gazebo="$(arg sim_gazebo)"
            sim_ignition="$(arg sim_ignition)"
            headless_mode="$(arg headless_mode)"
            initial_positions="${xacro.load_yaml(initial_positions_file)}"
            use_tool_communication="$(arg use_tool_communication)"
            tool_voltage="$(arg tool_voltage)"
            tool_parity="$(arg tool_parity)"
            tool_baud_rate="$(arg tool_baud_rate)"
            tool_stop_bits="$(arg tool_stop_bits)"
            tool_rx_idle_chars="$(arg tool_rx_idle_chars)"
            tool_tx_idle_chars="$(arg tool_tx_idle_chars)"
            tool_device_name="$(arg tool_device_name)"
            tool_tcp_port="$(arg tool_tcp_port)"
            robot_ip="$(arg robot_ip)"
            reverse_ip="192.168.56.1"
            script_filename="$(arg script_filename)"
            output_recipe_filename="$(arg output_recipe_filename)"
            input_recipe_filename="$(arg input_recipe_filename)"
            non_blocking_read="0"
        >
            <origin xyz="0 0 0.0" rpy="0 0 0" />
        </xacro:ur_robot>

    </xacro:macro>

    <xacro:rbrobout prefix="$(arg prefix)" publish_bf="true" hq="true" />

    <!--End
    Effector Robot side tool changer-->
    <joint name="tool_changer_joint" type="fixed">
        <parent link="ur_wrist_3_link" />
        <child link="tool_changer_robot_link" />
        <origin xyz="0.0 0.0 0.01895" rpy="0 0 -1.57079633" />
    </joint>

    <link name="tool_changer_robot_link">
        <xacro:cylinder_inertial radius="0.001" length="0.001" mass="0.001">
            <origin xyz="0.0 0.0 0.0" rpy="0 0 0" />
        </xacro:cylinder_inertial>

        <visual>
            <origin xyz="0 0 -0.009475" rpy="0 0 0" />
            <geometry>
                <cylinder radius="0.0315" length="0.01895" />
            </geometry>
            <material name="zimmer">
                <color rgba="0.1 0.1 0.1 1" />
            </material>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 -0.009475" rpy="0 0 0" />
            <geometry>
                <cylinder radius="0.0315" length="0.01895" />
            </geometry>
        </collision>
    </link>

    <gazebo reference="tool_changer_joint">
        <disableFixedJointLumping>true</disableFixedJointLumping>
        <preserveFixedJoint>true</preserveFixedJoint>
    </gazebo>

    <gazebo reference="world">
    </gazebo>
    <gazebo>
      <plugin filename="libgazebo_ros2_control.so" name="gazebo_ros2_control">
        <!--parameters>$(arg simulation_controllers)</parameters-->
      </plugin>
    </gazebo>

</robot>